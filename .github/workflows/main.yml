name: build

on:
  push:
    branches: ['main', 'master']
    paths: ['vcontrold/**']
    tags:
      - 'v*'
  workflow_dispatch:
env:
  OPENWRT_VERSION: "24.10"
jobs:
  setup:
      runs-on: ubuntu-latest
      outputs:
        OPENWRT_VERSION: ${{ env.OPENWRT_VERSION }}
      steps:
        - name: Compute outputs
          run: |
            echo "OPENWRT_VERSION=${{ env.OPENWRT_VERSION }}" >> $GITHUB_OUTPUT
  build:
    permissions: write-all 
    name: ${{ matrix.arch }} build
    runs-on: ubuntu-latest
    outputs:
      OPENWRT_VERSION: ${{ env.OPENWRT_VERSION }}
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        arch:
          - aarch64_cortex-a53
          - aarch64_cortex-a72
          - aarch64_cortex-a76
          - aarch64_generic
          - arm_arm1176jzf-s_vfp
          - arm_arm926ej-s
          - arm_cortex-a15_neon-vfpv4
          - arm_cortex-a5_vfpv4
          - arm_cortex-a7
          - arm_cortex-a7_neon-vfpv4
          - arm_cortex-a7_vfpv4
          - arm_cortex-a8_vfpv3
          - arm_cortex-a9
          - arm_cortex-a9_neon
          - arm_cortex-a9_vfpv3-d16
          - arm_fa526
          - arm_xscale
          - i386_pentium-mmx
          - i386_pentium4
          - loongarch64_generic
          - mips64_mips64r2
          - mips64_octeonplus
          - mips64el_mips64r2
          - mips_24kc
          - mips_4kec
          - mips_mips32
          - mipsel_24kc
          - mipsel_24kc_24kf
          - mipsel_74kc
          - mipsel_mips32
          - riscv64_riscv64
          - x86_64
        sdk:
          - openwrt-${{ needs.setup.outputs.OPENWRT_VERSION }}
          #- SNAPSHOT

    steps:
      - name: set env
        run: |
          echo "OPENWRT_VERSION=${{ env.OPENWRT_VERSION }}" >> $GITHUB_OUTPUT
            
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Packages
        uses: kollera/gh-action-sdk@main
        env:
          V: sc
          ARCH: ${{ matrix.arch }}-${{ matrix.sdk }}
          FEEDNAME: vcontrold
          PACKAGES: libxml2 vcontrold
          NO_REFRESH_CHECK: true
          SIGN_KEY_PUB: ${{ secrets.OPENWRT_SIGN_KEY_PUB }}
          SIGN_KEY: ${{ secrets.OPENWRT_SIGN_KEY }}
          FIXUP: 1

      #- name: Upload artifacts
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: ${{ matrix.arch }}-${{ matrix.sdk }}
      #    path: |
      #      bin/packages/${{ matrix.arch }}/vcontrold/*.apk
      #      bin/packages/riscv64_generic/vcontrold/*.apk
      #      bin/packages/${{ matrix.arch }}/vcontrold/*.ipk

      - name: Store packages
        uses: actions/upload-artifact@v4
        with:
          name: vcontrold-${{ matrix.arch }}-${{ matrix.sdk }}-packages
          path: bin/packages/${{ needs.build.outputs.OPENWRT_VERSION }}/${{ matrix.arch }}/vcontrold/        
  latest:
    permissions: write-all 
    name: Create latest
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: create dir
        run: mkdir -p ./artifacts
      - name: Download all artifacts
        uses: actions/download-artifact@v5
        with:
          path: ./artifacts
      - name: Create Release
        uses: softprops/action-gh-release@v2.2.1
        with:
          name: openwrt-${{ needs.build.outputs.OPENWRT_VERSION }}
          tag_name: latest
          make_latest: true
          files: ./artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  release:
    permissions: write-all 
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: create dir
        run: mkdir -p ./artifacts
      - name: Download all artifacts
        uses: actions/download-artifact@v5
        with:
          path: ./artifacts
      - name: Create Release
        uses: softprops/action-gh-release@v2.2.1
        with:
          #draft: false
          #prerelease: false    
          #tag_name: ${{ github.run_number }}
          #name: ${{ needs.build.outputs.OPENWRT_VERSION }}
          #body: Release notes for ${{ github.ref }}
          files: ./artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
