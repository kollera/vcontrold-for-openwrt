name: build

on:
  push:
    branches: ['main', 'master']
    paths: ['vcontrold/**']
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.arch }} build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - mipsel_74kc
          - mipsel_mips32
        sdk:
          - openwrt-24.10
          - SNAPSHOT

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Packages
        uses: kollera/gh-action-sdk@main
        env:
          V: sc
          ARCH: ${{ matrix.arch }}-${{ matrix.sdk }}
          FEEDNAME: vcontrold
          PACKAGES: libxml2 vcontrold
          NO_REFRESH_CHECK: true
          SIGN_KEY_PUB: ${{ secrets.OPENWRT_SIGN_KEY_PUB }}
          SIGN_KEY: ${{ secrets.OPENWRT_SIGN_KEY }}
          FIXUP: 1

      #- name: Upload artifacts
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: ${{ matrix.arch }}-${{ matrix.sdk }}
      #    path: |
      #      bin/packages/${{ matrix.arch }}/vcontrold/*.apk
      #      bin/packages/riscv64_generic/vcontrold/*.apk
      #      bin/packages/${{ matrix.arch }}/vcontrold/*.ipk

      - name: Store packages
        uses: actions/upload-artifact@v4
        with:
          name: vcontrold-${{ matrix.arch }}-${{ matrix.sdk }}-packages
          path: |
            bin/packages/${{ matrix.arch }}/**/vcontrold*.ipk
            bin/packages/${{ matrix.arch }}/**/vcontrold*.apk
            
      - name: storelocal
        run: |
          mkdir -p $GITHUB_WORKSPACE/output/${{ matrix.arch }}
          cp bin/packages/${{ matrix.arch }}/**/vcontrold*.ipk $GITHUB_WORKSPACE/output/${{ matrix.arch }}/ || true
          cp bin/packages/${{ matrix.arch }}/**/vcontrold*.apk $GITHUB_WORKSPACE/output/${{ matrix.arch }}/ || true
      - name: List Output Directory
        run: ls -R $GITHUB_WORKSPACE/output 
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: Release notes for ${{ github.ref }}
          files: $GITHUB_WORKSPACE/output/**  # Include all files in the output directory
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
